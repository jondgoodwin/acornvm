# Acorn language tests
a=+List <<
	3

a=3 if !a

$test.True(true, "true is True")
$test.Equal(null || 'x', 'x', "(null or 'x')==='x'")
$test.Equal(null and 'x', null, "(null and 'x')===null")
$test.Equal(0<1 and 1<2, true, "(0<1 and 1<2)===true")
$test.Equal(2<1 ? 'a' else 'b', 'b', "2<1 ? 'a' else 'b' == 'b'")

if !1===1
	$test.True(false, "!1===1")
if !true
	$test.True(false, "!true")
if !(2<3 && 1<2 || 0<1 && 0<4)
	$test.True(false, "!(2<3 && 1<2 || 0<1 && 0<4)")

job = 0
while job<5
	job = job + 1
$test.Equal(job, 5, "while increments job 5 times")

# Parameter default value
parmdefault = [a=1]
	a
$test.Equal(parmdefault(), 1, "Parameter default failed")
$test.Equal(parmdefault(3), 3, "Parameter default override failed")

returning = [a, ...]
	a if a
$test.Equal(returning(1), 1, "Returning 1 failed")
$test.Equal(returning(), null, "Returning no values failed")

multret = [a]
	a, a*2, a*3

splat = [a, ...]
	a
# warnings - these are not allowed
1 = 1
self, this = 0,1

a,b = 1,2
a,b = b,a
$test.True(a===2 and b===1, "Swap values failed")

fact = [n, fn, total=1]
	return total if n<2
	fn(n-1, fn, n*total)
$test.Equal(fact(10, fact), 3628800, "Bad recursive factorial method with tail call")
